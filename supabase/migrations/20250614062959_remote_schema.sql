

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."day_of_week" AS ENUM (
    'monday',
    'tuesday',
    'wednesday',
    'thursday',
    'friday',
    'saturday',
    'sunday'
);


ALTER TYPE "public"."day_of_week" OWNER TO "postgres";


CREATE TYPE "public"."time_slot_type" AS ENUM (
    'lecture',
    'lab',
    'tutorial',
    'other'
);


ALTER TYPE "public"."time_slot_type" OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."update_updated_at_column"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$;


ALTER FUNCTION "public"."update_updated_at_column"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."academic_years" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "school_id" "uuid" NOT NULL,
    "name" "text" NOT NULL,
    "start_date" "date" NOT NULL,
    "end_date" "date" NOT NULL,
    CONSTRAINT "academic_years_date_check" CHECK (("end_date" > "start_date"))
);


ALTER TABLE "public"."academic_years" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."api_room" (
    "id" bigint NOT NULL,
    "name" character varying(100) NOT NULL,
    "capacity" integer NOT NULL,
    CONSTRAINT "api_room_capacity_check" CHECK (("capacity" >= 0))
);


ALTER TABLE "public"."api_room" OWNER TO "postgres";


ALTER TABLE "public"."api_room" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."api_room_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."api_subject" (
    "id" bigint NOT NULL,
    "name" character varying(100) NOT NULL
);


ALTER TABLE "public"."api_subject" OWNER TO "postgres";


ALTER TABLE "public"."api_subject" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."api_subject_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."api_teacher" (
    "id" bigint NOT NULL,
    "name" character varying(100) NOT NULL,
    "email" character varying(254) NOT NULL
);


ALTER TABLE "public"."api_teacher" OWNER TO "postgres";


ALTER TABLE "public"."api_teacher" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."api_teacher_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."class_offerings" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "term_id" "uuid" NOT NULL,
    "class_section_id" "uuid" NOT NULL,
    "subject_id" "uuid" NOT NULL,
    "periods_per_week" integer NOT NULL
);


ALTER TABLE "public"."class_offerings" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."class_sections" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "school_id" "uuid" NOT NULL,
    "grade_level" integer NOT NULL,
    "name" "text" NOT NULL
);


ALTER TABLE "public"."class_sections" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."holidays" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "term_id" "uuid" NOT NULL,
    "date" "date" NOT NULL,
    "reason" "text" NOT NULL
);


ALTER TABLE "public"."holidays" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."scheduled_lessons" (
    "id" bigint NOT NULL,
    "teaching_assignment_id" "uuid" NOT NULL,
    "date" "date" NOT NULL,
    "timeslot_id" "uuid" NOT NULL,
    "status" "text" DEFAULT 'Scheduled'::"text" NOT NULL,
    "substitute_teacher_id" "uuid",
    "notes" "text"
);


ALTER TABLE "public"."scheduled_lessons" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."scheduled_lessons_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "public"."scheduled_lessons_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."scheduled_lessons_id_seq" OWNED BY "public"."scheduled_lessons"."id";



CREATE TABLE IF NOT EXISTS "public"."schedules" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "subject_id" "uuid" NOT NULL,
    "teacher_id" "uuid" NOT NULL,
    "room_id" "uuid" NOT NULL,
    "timeslot_id" "uuid" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."schedules" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."schools" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."schools" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."subjects" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "school_id" "uuid" NOT NULL,
    "name" "text" NOT NULL,
    "code" "text",
    "subject_type" "text"
);


ALTER TABLE "public"."subjects" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."teacher_qualifications" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "teacher_id" "uuid" NOT NULL,
    "subject_id" "uuid" NOT NULL
);


ALTER TABLE "public"."teacher_qualifications" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."teachers" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "school_id" "uuid" NOT NULL,
    "first_name" "text" NOT NULL,
    "last_name" "text" NOT NULL,
    "email" "text" NOT NULL
);


ALTER TABLE "public"."teachers" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."teaching_assignments" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "class_offering_id" "uuid" NOT NULL,
    "teacher_id" "uuid" NOT NULL
);


ALTER TABLE "public"."teaching_assignments" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."terms" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "academic_year_id" "uuid" NOT NULL,
    "name" "text" NOT NULL,
    "start_date" "date" NOT NULL,
    "end_date" "date" NOT NULL,
    CONSTRAINT "terms_date_check" CHECK (("end_date" > "start_date"))
);


ALTER TABLE "public"."terms" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."time_slots" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "school_id" "uuid" NOT NULL,
    "day_of_week" integer NOT NULL,
    "start_time" time without time zone NOT NULL,
    "end_time" time without time zone NOT NULL,
    "is_teaching_period" boolean DEFAULT true,
    "slot_name" "text",
    CONSTRAINT "time_slots_day_of_week_check" CHECK ((("day_of_week" >= 1) AND ("day_of_week" <= 7))),
    CONSTRAINT "time_slots_time_check" CHECK (("end_time" > "start_time"))
);


ALTER TABLE "public"."time_slots" OWNER TO "postgres";


ALTER TABLE ONLY "public"."scheduled_lessons" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."scheduled_lessons_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."academic_years"
    ADD CONSTRAINT "academic_years_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."api_room"
    ADD CONSTRAINT "api_room_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."api_room"
    ADD CONSTRAINT "api_room_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."api_subject"
    ADD CONSTRAINT "api_subject_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."api_subject"
    ADD CONSTRAINT "api_subject_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."api_teacher"
    ADD CONSTRAINT "api_teacher_email_key" UNIQUE ("email");



ALTER TABLE ONLY "public"."api_teacher"
    ADD CONSTRAINT "api_teacher_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."class_offerings"
    ADD CONSTRAINT "class_offerings_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."class_offerings"
    ADD CONSTRAINT "class_offerings_term_id_class_section_id_subject_id_key" UNIQUE ("term_id", "class_section_id", "subject_id");



ALTER TABLE ONLY "public"."class_sections"
    ADD CONSTRAINT "class_sections_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."class_sections"
    ADD CONSTRAINT "class_sections_school_id_grade_level_name_key" UNIQUE ("school_id", "grade_level", "name");



ALTER TABLE ONLY "public"."holidays"
    ADD CONSTRAINT "holidays_date_key" UNIQUE ("date");



ALTER TABLE ONLY "public"."holidays"
    ADD CONSTRAINT "holidays_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."scheduled_lessons"
    ADD CONSTRAINT "scheduled_lessons_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."schools"
    ADD CONSTRAINT "schools_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."subjects"
    ADD CONSTRAINT "subjects_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."subjects"
    ADD CONSTRAINT "subjects_school_id_name_key" UNIQUE ("school_id", "name");



ALTER TABLE ONLY "public"."teacher_qualifications"
    ADD CONSTRAINT "teacher_qualifications_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."teacher_qualifications"
    ADD CONSTRAINT "teacher_qualifications_teacher_id_subject_id_key" UNIQUE ("teacher_id", "subject_id");



ALTER TABLE ONLY "public"."teachers"
    ADD CONSTRAINT "teachers_email_key" UNIQUE ("email");



ALTER TABLE ONLY "public"."teachers"
    ADD CONSTRAINT "teachers_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."teaching_assignments"
    ADD CONSTRAINT "teaching_assignments_class_offering_id_teacher_id_key" UNIQUE ("class_offering_id", "teacher_id");



ALTER TABLE ONLY "public"."teaching_assignments"
    ADD CONSTRAINT "teaching_assignments_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."terms"
    ADD CONSTRAINT "terms_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."time_slots"
    ADD CONSTRAINT "time_slots_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."time_slots"
    ADD CONSTRAINT "time_slots_school_id_day_of_week_start_time_key" UNIQUE ("school_id", "day_of_week", "start_time");



CREATE INDEX "api_room_name_2a63a571_like" ON "public"."api_room" USING "btree" ("name" "varchar_pattern_ops");



CREATE INDEX "api_subject_name_2445dd86_like" ON "public"."api_subject" USING "btree" ("name" "varchar_pattern_ops");



CREATE INDEX "api_teacher_email_f8b2935f_like" ON "public"."api_teacher" USING "btree" ("email" "varchar_pattern_ops");



CREATE OR REPLACE TRIGGER "update_schedules_updated_at" BEFORE UPDATE ON "public"."schedules" FOR EACH ROW EXECUTE FUNCTION "public"."update_updated_at_column"();



ALTER TABLE ONLY "public"."academic_years"
    ADD CONSTRAINT "academic_years_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id");



ALTER TABLE ONLY "public"."class_offerings"
    ADD CONSTRAINT "class_offerings_class_section_id_fkey" FOREIGN KEY ("class_section_id") REFERENCES "public"."class_sections"("id");



ALTER TABLE ONLY "public"."class_offerings"
    ADD CONSTRAINT "class_offerings_subject_id_fkey" FOREIGN KEY ("subject_id") REFERENCES "public"."subjects"("id");



ALTER TABLE ONLY "public"."class_offerings"
    ADD CONSTRAINT "class_offerings_term_id_fkey" FOREIGN KEY ("term_id") REFERENCES "public"."terms"("id");



ALTER TABLE ONLY "public"."class_sections"
    ADD CONSTRAINT "class_sections_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id");



ALTER TABLE ONLY "public"."holidays"
    ADD CONSTRAINT "holidays_term_id_fkey" FOREIGN KEY ("term_id") REFERENCES "public"."terms"("id");



ALTER TABLE ONLY "public"."scheduled_lessons"
    ADD CONSTRAINT "scheduled_lessons_substitute_teacher_id_fkey" FOREIGN KEY ("substitute_teacher_id") REFERENCES "public"."teachers"("id");



ALTER TABLE ONLY "public"."scheduled_lessons"
    ADD CONSTRAINT "scheduled_lessons_teaching_assignment_id_fkey" FOREIGN KEY ("teaching_assignment_id") REFERENCES "public"."teaching_assignments"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."scheduled_lessons"
    ADD CONSTRAINT "scheduled_lessons_timeslot_id_fkey" FOREIGN KEY ("timeslot_id") REFERENCES "public"."time_slots"("id");



ALTER TABLE ONLY "public"."subjects"
    ADD CONSTRAINT "subjects_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id");



ALTER TABLE ONLY "public"."teacher_qualifications"
    ADD CONSTRAINT "teacher_qualifications_subject_id_fkey" FOREIGN KEY ("subject_id") REFERENCES "public"."subjects"("id");



ALTER TABLE ONLY "public"."teacher_qualifications"
    ADD CONSTRAINT "teacher_qualifications_teacher_id_fkey" FOREIGN KEY ("teacher_id") REFERENCES "public"."teachers"("id");



ALTER TABLE ONLY "public"."teachers"
    ADD CONSTRAINT "teachers_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id");



ALTER TABLE ONLY "public"."teaching_assignments"
    ADD CONSTRAINT "teaching_assignments_class_offering_id_fkey" FOREIGN KEY ("class_offering_id") REFERENCES "public"."class_offerings"("id");



ALTER TABLE ONLY "public"."teaching_assignments"
    ADD CONSTRAINT "teaching_assignments_teacher_id_fkey" FOREIGN KEY ("teacher_id") REFERENCES "public"."teachers"("id");



ALTER TABLE ONLY "public"."terms"
    ADD CONSTRAINT "terms_academic_year_id_fkey" FOREIGN KEY ("academic_year_id") REFERENCES "public"."academic_years"("id");



ALTER TABLE ONLY "public"."time_slots"
    ADD CONSTRAINT "time_slots_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id");





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

























































































































































GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "anon";
GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "service_role";


















GRANT ALL ON TABLE "public"."academic_years" TO "anon";
GRANT ALL ON TABLE "public"."academic_years" TO "authenticated";
GRANT ALL ON TABLE "public"."academic_years" TO "service_role";



GRANT ALL ON TABLE "public"."api_room" TO "anon";
GRANT ALL ON TABLE "public"."api_room" TO "authenticated";
GRANT ALL ON TABLE "public"."api_room" TO "service_role";



GRANT ALL ON SEQUENCE "public"."api_room_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."api_room_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."api_room_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."api_subject" TO "anon";
GRANT ALL ON TABLE "public"."api_subject" TO "authenticated";
GRANT ALL ON TABLE "public"."api_subject" TO "service_role";



GRANT ALL ON SEQUENCE "public"."api_subject_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."api_subject_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."api_subject_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."api_teacher" TO "anon";
GRANT ALL ON TABLE "public"."api_teacher" TO "authenticated";
GRANT ALL ON TABLE "public"."api_teacher" TO "service_role";



GRANT ALL ON SEQUENCE "public"."api_teacher_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."api_teacher_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."api_teacher_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."class_offerings" TO "anon";
GRANT ALL ON TABLE "public"."class_offerings" TO "authenticated";
GRANT ALL ON TABLE "public"."class_offerings" TO "service_role";



GRANT ALL ON TABLE "public"."class_sections" TO "anon";
GRANT ALL ON TABLE "public"."class_sections" TO "authenticated";
GRANT ALL ON TABLE "public"."class_sections" TO "service_role";



GRANT ALL ON TABLE "public"."holidays" TO "anon";
GRANT ALL ON TABLE "public"."holidays" TO "authenticated";
GRANT ALL ON TABLE "public"."holidays" TO "service_role";



GRANT ALL ON TABLE "public"."scheduled_lessons" TO "anon";
GRANT ALL ON TABLE "public"."scheduled_lessons" TO "authenticated";
GRANT ALL ON TABLE "public"."scheduled_lessons" TO "service_role";



GRANT ALL ON SEQUENCE "public"."scheduled_lessons_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."scheduled_lessons_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."scheduled_lessons_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."schedules" TO "anon";
GRANT ALL ON TABLE "public"."schedules" TO "authenticated";
GRANT ALL ON TABLE "public"."schedules" TO "service_role";



GRANT ALL ON TABLE "public"."schools" TO "anon";
GRANT ALL ON TABLE "public"."schools" TO "authenticated";
GRANT ALL ON TABLE "public"."schools" TO "service_role";



GRANT ALL ON TABLE "public"."subjects" TO "anon";
GRANT ALL ON TABLE "public"."subjects" TO "authenticated";
GRANT ALL ON TABLE "public"."subjects" TO "service_role";



GRANT ALL ON TABLE "public"."teacher_qualifications" TO "anon";
GRANT ALL ON TABLE "public"."teacher_qualifications" TO "authenticated";
GRANT ALL ON TABLE "public"."teacher_qualifications" TO "service_role";



GRANT ALL ON TABLE "public"."teachers" TO "anon";
GRANT ALL ON TABLE "public"."teachers" TO "authenticated";
GRANT ALL ON TABLE "public"."teachers" TO "service_role";



GRANT ALL ON TABLE "public"."teaching_assignments" TO "anon";
GRANT ALL ON TABLE "public"."teaching_assignments" TO "authenticated";
GRANT ALL ON TABLE "public"."teaching_assignments" TO "service_role";



GRANT ALL ON TABLE "public"."terms" TO "anon";
GRANT ALL ON TABLE "public"."terms" TO "authenticated";
GRANT ALL ON TABLE "public"."terms" TO "service_role";



GRANT ALL ON TABLE "public"."time_slots" TO "anon";
GRANT ALL ON TABLE "public"."time_slots" TO "authenticated";
GRANT ALL ON TABLE "public"."time_slots" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
